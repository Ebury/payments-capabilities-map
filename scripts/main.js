!function t(e,o,n){function r(c,i){if(!o[c]){if(!e[c]){var l="function"==typeof require&&require;if(!i&&l)return l(c,!0);if(a)return a(c,!0);var s=new Error("Cannot find module '"+c+"'");throw s.code="MODULE_NOT_FOUND",s}var p=o[c]={exports:{}};e[c][0].call(p.exports,function(t){var o=e[c][1][t];return r(o?o:t)},p,p.exports,t,e,o,n)}return o[c].exports}for(var a="function"==typeof require&&require,c=0;c<n.length;c++)r(n[c]);return r}({1:[function(t,e,o){"use strict";function n(){this._init()}n.prototype._init=function(){this.query="\n    SELECT world_borders.*, payments_and_capabilities.currency_name, payments_and_capabilities.currency_symbol, \n    payments_and_capabilities.payments, payments_and_capabilities.collections, payments_and_capabilities.cutoff, \n    payments_and_capabilities.category\n    FROM world_borders\n    LEFT JOIN payments_and_capabilities\n    ON world_borders.iso_a3=payments_and_capabilities.country_iso_code\n    WHERE world_borders.iso_a3 != 'ATA'\n    ORDER BY world_borders.labelrank;\n  ",this.cartocss="\n    #world_borders{\n      polygon-fill: #D9D9D9;\n      polygon-opacity: 1;\n      line-color: #FFF;\n      line-width: 0.5;\n      line-opacity: 1;\n    }\n    \n    #world_borders[category={{ category_code }}]{\n      polygon-fill: {{ category_color }};\n    }\n    \n    #world_borders::labels\n    [zoom >= 3][labelrank < 3],\n    [zoom >= 4][labelrank < 4],\n    [zoom >= 5][labelrank < 5],\n    [zoom >= 6][labelrank < 6],\n    [zoom >= 7][labelrank < 7]\n    [zoom >= 8][labelrank < 8]\n    [zoom >= 9][labelrank < 9]\n    [zoom >= 10][labelrank >= 9]\n    {\n      text-name: [name];\n      text-face-name: 'DejaVu Sans Book';\n      text-size: 10;\n      text-label-position-tolerance: 0;\n      text-fill: #000;\n      text-allow-overlap: false;\n      text-placement: point;\n      text-placement-type: simple;\n      text-placements: \"N,E,S,W\";\n    }\n  ",this.tooltipTemplate='\n    <div class="map__tooltip">\n      <h6 class="map__tooltip__title">{{currency_name}}</h6>\n      <table class="map__tooltip__data">\n        <tbody>\n          <tr>\n            <td>Currency</td>\n            <td>{{ currency_symbol }}</td>\n          </tr>\n          <tr>\n            <td>Payments</td>\n            <td>{{#payments}}Yes{{/payments}}{{^payments}}No{{/payments}}</td>\n          </tr>\n         <tr>\n            <td>Collections</td>\n            <td>{{#collections}}Yes{{/collections}}{{^collections}}No{{/collections}}</td>\n          </tr>\n          <tr>\n            <td>Cut off</td>\n            <td>{{ cutoff }}</td>\n          </tr>\n        </tbody>  \n      </table>\n    </div>\n    ';var t=1,e=2,o=3;this.categories=[{code:t,color:"#00C0F0"},{code:e,color:"#9AD7E5"},{code:o,color:"#144257"}],this.currentCategory=_.findWhere(this.categories,{code:t}),this.map=this._createMap(),this._addCartoLayer(),this._setUpEvents()},n.prototype._createMap=function(){var t=new L.Map(document.querySelector(".js-map"),{center:[50,0],zoom:2,zoomControl:!1,scrollWheelZoom:!1,tileLayer:{continuousWorld:!1,noWrap:!1}});return t.fitWorld().zoomIn().panTo(new L.LatLng(50,0)),L.control.zoom({position:"topright"}).addTo(t),t},n.prototype._addCartoLayer=function(){var t=this;cartodb.createLayer(this.map,{user_name:"ebury",type:"cartodb",sublayers:[{sql:t.query,cartocss:this.cartocss.replace("{{ category_code }}",this.currentCategory.code).replace("{{ category_color }}",this.currentCategory.color),interactivity:"currency_name, currency_symbol, payments, collections, cutoff, category"}]},{https:!0}).addTo(this.map).on("done",function(e){t.cartoLayer=e.getSubLayer(0);var o=e.leafletMap.viz.addOverlay({type:"tooltip",layer:t.cartoLayer,template:t.tooltipTemplate,position:"top|center",fields:[{currency_name:"currency_name",currency_symbol:"currency_symbol",payments:"payments",collections:"collections",cutoff:"cutoff",category:"category"}]});o.options.layer.on("mouseover",function(e,n,r,a){a.category!==t.currentCategory.code&&o.hide()})})},n.prototype._setUpEvents=function(){var t=this;$(".js-category").change(function(){t._changeCategory(parseInt($(this).val()))})},n.prototype._changeCategory=function(t){this.currentCategory=_.findWhere(this.categories,{code:t}),this.cartoLayer.setCartoCSS(this.cartocss.replace("{{ category_code }}",this.currentCategory.code).replace("{{ category_color }}",this.currentCategory.color))};new n},{}]},{},[1]);